import json
import re
from llm import llm_openrouter
from tts import tts_coqui

# === 1. Wczytanie komend predefiniowanych ===
with open("config/komendy_domyslne.json", encoding="utf-8") as f:
    KOMENDY = json.load(f)

# === 2. Analiza tekstu ===
def analizuj(tekst, config):
    print("ðŸ“¥ Otrzymano polecenie:", tekst)

    # Szukaj dopasowania do wzorcÃ³w z JSON-a
    for komenda in KOMENDY:
        wzorzec = komenda["wzorzec"]
        intencja = komenda["intencja"]
        if re.search(wzorzec, tekst, re.IGNORECASE):
            print(f"âœ… Rozpoznano intencjÄ™: {intencja}")
            return wykonaj_intencje(intencja, tekst)

    # Brak dopasowania â†’ LLM
    print("ðŸ¤– Brak predefiniowanej komendy â€“ pytam LLM...")
    odpowiedz = llm_openrouter.odpowiedz(tekst, config)
    tts_coqui.powiedz(odpowiedz)
    return

# === 3. Wykonanie intencji ===
def wykonaj_intencje(intencja, tekst):
    if intencja == "zapytanie_godzina":
        from datetime import datetime
        godzina = datetime.now().strftime("%H:%M")
        odpowiedz = f"Jest godzina {godzina}"
    elif intencja == "powitanie":
        odpowiedz = "CzeÅ›Ä‡! Jak mogÄ™ pomÃ³c?"
    else:
        odpowiedz = f"ZrozumiaÅ‚em intencjÄ™: {intencja}, ale nie mam jeszcze implementacji."

    tts_coqui.powiedz(odpowiedz)
